# Make sure to check the documentation at http://goreleaser.com
# Script modified to work with cirocket preprocessing
# cirocket templates in SQUARE braces, goreleaser in CURLY braces

[[if .projectName]]
project_name: [[ .projectName ]]
[[end]]

[[if .distDir]]
dist: [[ .distDir ]]
[[else]]
dist: .dist
[[end]]

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy

builds:
  - env:
    - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - '"-s -w -X main.version={{ .Version }} -X main.commit={{ .Commit }} -X main.date={{ .CommitDate }} -X main.builtBy=[[ .builtBy ]]"'
    hooks:
      post: upx {{ .Path }}

[[if .includeBrews]]
brews:
  - tap:
      owner: '[[ .repoUser ]]'
      [[if .homebrewTap]]
      name: [[ .homebrewTap ]]
      [[else]]
      name: homebrew-tap
      [[end]]
    folder: Formula
    homepage: 'https://github.com/{{ .Env.REPO_USER }}/{{ .ProjectName }}'
    description: '[[ .description ]]'
[[end]]

[[if .includePackages]]
nfpms:
  - homepage: 'https://github.com/{{ .Env.REPO_USER }}/{{ .ProjectName }}'
    description: '[[ .description ]]'
    license: '[[ .license ]]' 
    formats:
    - apk
    - deb
    - rpm
[[end]]

release:
  github:
    owner: '[[ .repoUser ]]'
    name: '[[ .projectName]]'

  [[ if .releaseHeader ]]
  header: |
    [[ .releaseHeader | Indent 4]]
  [[end]]

  [[ if .releaseFooter ]] 
  footer: |
    [[ .releaseFooter ]]
  [[end]]
    
archives:
  - replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      386: i386
      amd64: x86_64
    format_overrides:
      - goos: windows
        format: zip
    files:
        - LICENSE
        - README.md
        [[if .includeChnagelog]]- CHANGELOG.md[[end]]

checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}"
changelog:
  skip: false
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

[[if and .dockerfile .includeDocker]]
dockers:
  - image_templates:
[[if .includeGHCR]]
    - 'ghcr.io/{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
[[if not .dockerUseManifests]]
    - 'ghcr.io/{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}'
    - 'ghcr.io/{{ .Env.REPO_USER }}/{{ .ProjectName }}:latest'
[[end]]
[[end]]
[[if .includeDockerHub]] 
    - '{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
[[if not .dockerUseManifests]]
    - '{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}'
    - '{{ .Env.REPO_USER }}/{{ .ProjectName }}:latest'
[[end]]
[[end]]
    dockerfile: [[ .dockerfile ]]
    [[if .dockerUse]]
    use: [[ .dockerUse ]]
    [[end]] 
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source=https://github.com/{{ .Env.REPO_USER }}/{{ .ProjectName }}"
      - "--platform=linux/amd64"
    goarch: amd64
  - image_templates:
[[if .includeGHCR]]
    - 'ghcr.io/{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
[[if not .dockerUseManifests]]
    - 'ghcr.io/{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}'
    - 'ghcr.io/{{ .Env.REPO_USER }}/{{ .ProjectName }}:latest'
[[end]]
[[end]]
[[if .includeDockerHub]] 
    - '{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
[[if not .dockerUseManifests]]
    - '{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}'
    - '{{ .Env.REPO_USER }}/{{ .ProjectName }}:latest'
[[end]]
[[end]]
    dockerfile: [[ .dockerfile ]]
    [[if .dockerUse]]
    use: [[ .dockerUse ]]
    [[end]] 
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source=https://github.com/{{ .Env.REPO_USER }}/{{ .ProjectName }}"
      - "--platform=linux/arm64"
    goarch: arm64

[[if .dockerUseManifests]]
docker_manifests:
[[if .includeGHCR]]
  - name_template: 'ghcr.io/{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}'
    image_templates:
    - 'ghcr.io/{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
    - 'ghcr.io/{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
  - name_template: 'ghcr.io/{{ .Env.REPO_USER }}/{{ .ProjectName }}:latest'
    image_templates:
    - 'ghcr.io/{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
    - 'ghcr.io/{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
[[end]]
[[if .includeDockerHub]]    
  - name_template: '{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}'
    image_templates:
    - '{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
    - '{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
  - name_template: '{{ .Env.REPO_USER }}/{{ .ProjectName }}:latest'
    image_templates:
    - '{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
    - '{{ .Env.REPO_USER }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
[[end]]
[[end]]
[[end]]

